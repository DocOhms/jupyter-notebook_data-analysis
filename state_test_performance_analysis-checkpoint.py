{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4a728745-5ddd-4354-9b5d-d4636727998c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results for English: Reading:\n",
      "  Mean: 70.83\n",
      "  Standard Deviation: 1.99\n",
      "  T-statistic: 0.00\n",
      "  P-value: 1.0000\n",
      "  Yearly Pass Rates: {'2021-2022 Pass Rate': 71.0, '2022-2023 Pass Rate': 70.33333333333333, '2023-2024 Pass Rate': 71.16666666666667}\n",
      "  Conclusion: Fail to reject the null hypothesis.\n",
      "\n",
      "\n",
      "Results for Mathematics:\n",
      "  Mean: 63.78\n",
      "  Standard Deviation: 4.76\n",
      "  T-statistic: 0.00\n",
      "  P-value: 1.0000\n",
      "  Yearly Pass Rates: {'2021-2022 Pass Rate': 61.0, '2022-2023 Pass Rate': 64.33333333333333, '2023-2024 Pass Rate': 66.0}\n",
      "  Conclusion: Fail to reject the null hypothesis.\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "\n",
    "# Load the SOL data\n",
    "data = pd.read_excel('State_Test_by_level_2023_2024.xlsx')\n",
    "\n",
    "# subjects to analyze\n",
    "subjects = ['English: Reading', 'Mathematics']\n",
    "grades = ['Gr 3', 'Gr 4', 'Gr 5', 'Gr 6', 'Gr 7', 'Gr 8']  # Adjust based on your analysis\n",
    "\n",
    "# Functions to analyze\n",
    "def analyze_data(subject):\n",
    "    # Filter data\n",
    "    filtered_data = data[\n",
    "        (data['Subject'] == subject) & \n",
    "        (data['Grade'].isin(grades))\n",
    "    ]\n",
    "\n",
    "    # Extract pass rates for each year\n",
    "    yearly_pass_rates = filtered_data[['2021-2022 Pass Rate', '2022-2023 Pass Rate', '2023-2024 Pass Rate']]\n",
    "\n",
    "    # Calculate mean pass rates\n",
    "    mean_pass_rates = yearly_pass_rates.mean(axis=1)\n",
    "\n",
    "    # Calculate mean and standard deviation\n",
    "    mean = mean_pass_rates.mean()\n",
    "    std_dev = mean_pass_rates.std()\n",
    "\n",
    "    # Hypothesis test: H0: mean = overall_mean; H1: mean â‰  overall_mean\n",
    "    overall_mean = data[\n",
    "        (data['Subject'] == subject) & \n",
    "        (data['Grade'].isin(grades))\n",
    "    ][['2021-2022 Pass Rate', '2022-2023 Pass Rate', '2023-2024 Pass Rate']].mean(axis=1).mean()\n",
    "\n",
    "    t_stat, p_value = stats.ttest_1samp(mean_pass_rates, overall_mean)\n",
    "\n",
    "    return {\n",
    "        'Mean': mean,\n",
    "        'Standard Deviation': std_dev,\n",
    "        'T-statistic': t_stat,\n",
    "        'P-value': p_value,\n",
    "        'Yearly Pass Rates': yearly_pass_rates.mean().to_dict()  # Convert to dictionary for easy access\n",
    "    }\n",
    "\n",
    "# Analyze data for each subject\n",
    "results_summary = {}\n",
    "for subject in subjects:\n",
    "    results_summary[subject] = analyze_data(subject)\n",
    "\n",
    "# Print results\n",
    "for subject, metrics in results_summary.items():\n",
    "    print(f\"Results for {subject}:\")\n",
    "    print(f\"  Mean: {metrics['Mean']:.2f}\")\n",
    "    print(f\"  Standard Deviation: {metrics['Standard Deviation']:.2f}\")\n",
    "    print(f\"  T-statistic: {metrics['T-statistic']:.2f}\")\n",
    "    print(f\"  P-value: {metrics['P-value']:.4f}\")\n",
    "    print(f\"  Yearly Pass Rates: {metrics['Yearly Pass Rates']}\")\n",
    "    if metrics['P-value'] < 0.05:\n",
    "        print(\"  Conclusion: Reject the null hypothesis.\")\n",
    "    else:\n",
    "        print(\"  Conclusion: Fail to reject the null hypothesis.\")\n",
    "    print(\"\\n\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7982084e-269d-4e88-bf62-0679b134c3e2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
